<!ELEMENT robot (pigeon?, pdp?, lidar*, camera*, led*, servo*, chassis?, mechanism* )>


<!-- ====================================================
	 Pigeon IMU
	 ==================================================== -->
<!ELEMENT pigeon EMPTY>
<!ATTLIST pigeon 
          canId             (  0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 | 
                              10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 
                              20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 
                              30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 
                              40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 
                              50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 58 | 59 | 
                              60 | 61 | 62 ) "0"
>


<!-- ====================================================
	 PDP (power distribution panel) 
	 ==================================================== -->
<!ELEMENT pdp EMPTY>
<!ATTLIST pdp 
          canId             (  0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 | 
                              10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 
                              20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 
                              30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 
                              40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 
                              50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 58 | 59 | 
                              60 | 61 | 62 ) "0"
>

<!-- ====================================================
	 LEDs
	 ==================================================== -->
<!ELEMENT led EMPTY>
<!ATTLIST led 
          canId             (  0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 | 
                              10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 
                              20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 
                              30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 
                              40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 
                              50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 58 | 59 | 
                              60 | 61 | 62 ) "0"
>


<!-- ====================================================
     chassis  
     ====================================================

    Wheel Base is front-back distance between wheel centers 
    Track is the distance between wheels on an "axle"       
	==================================================== -->
<!ELEMENT chassis (motor*) >
<!ATTLIST chassis 
          wheelDiameter     CDATA #REQUIRED
          wheelBase         CDATA #REQUIRED
          track             CDATA #REQUIRED
>



<!-- ====================================================
        enum MECHANISM_TYPE
        {
            UNKNOWN_MECHANISM = -1,
            WRIST,
            INTAKE,
            ARM,
            CLIMBER,
            MAX_MECHANISM_TYPES
        };

        enum MECHANISM_PARAM_TYPE
        {
            MECHANISM_PARAM_UNKNOWN = -1,
            WRIST_ANGLE_OFFSET,
            ARM_ANGLE_OFFSET,
            ARM_EXTENSION_OFFSET,
            HATCH_LOW_ANGLE,
            HATCH_HP_ANGLE,
            HATCH_MID_ANGLE,
            HATCH_HIGH_ANGLE,
            CARGO_FLOOR_ANGLE,
            CARGO_HP_ANGLE,
            CARGO_SHIP_ANGLE,
            CARGO_LOW_ANGLE,
            CARGO_MID_ANGLE,
            CARGO_HIGH_ANGLE,
            HATCH_HP_EXTENSION,
            HATCH_MID_EXTENSION,
            HATCH_HIGH_EXTENSION,
            CARGO_FLOOR_EXTENSION,
            CARGO_HP_EXTENSION,
            CARGO_SHIP_EXTENSION,
            CARGO_LOW_EXTENSION,
            CARGO_MID_EXTENSION,
            CARGO_HIGH_EXTENSION,
            MAX_MECHANISM_PARAM_TYPES
        };


	==================================================== -->
<!ELEMENT mechanism (motor*, analogInput*, digitalInput*, servo*, mechanismData*, PID*)>
<!ATTLIST mechanism
          type              ( 0 | 1 | 2 | 3 ) "0"
>

<!ELEMENT mechanismData EMPTY>
<!ATTLIST mechanismData 
          paramType         (  0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 | 
          					  10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 |
                              20 | 21 ) "0"
          value             CDATA REQUIRED
>

<!-- ====================================================

        enum CONTROL_MODE
        {
            VELOCITY,
            POSITION,
            MOTION_MAGIC
        };

	==================================================== -->
<!ELEMENT PID EMPTY>
<!ATTLIST PID
          mode ( 0, 1, 2 ) "1"
          proportional CDATA "0.0"
          integral CDATA "0.0"
          derivative CDATA "0.0"
          feedforward CDATA "0.0"
          maxacceleration CDATA "0.0"
          cruiseveloc[ty CDATA "0.0"
>

<!-- ====================================================
        enum LIDAR_USAGE
        {
            FORWARD,
            BACKWARD,
            MAX_LIDAR_USAGES
        };

	==================================================== -->
<!ELEMENT lidar EMPTY>
<!ATTLIST lidar 
          usage              ( 0 | 1  ) "0"
          inputpin			 CDATA "0"
          triggerpin		 CDATA "0"
>

<!-- ====================================================
	 camera
	 
	    enum PIXEL_FORMAT
        {
                UNKNOWN_PIXEL_FORMAT = -1,
                KMJPEG,
                KYUYV,
                KRGB565,
                KBGR,
                KGRAY
        };
	==================================================== -->

<!ELEMENT camera EMPTY>
<!ATTLIST camera 
          id                CDATA "0"
          format            ( 0 | 1 | 2 | 3 | 4 ) "0"
          width			 	CDATA "640"
          height		 	CDATA "480"
          fps			 	CDATA "30"
>


<!-- ====================================================
	 motor usage options 
	 ====================================================
		enum MOTOR_USAGE
		{
			UNKNOWN_USAGGE = -1,
			CHASSIS_MIDDLE_LEFT,
			CHASSIS_FRONT_LEFT,
			CHASSIS_BACK_LEFT,
			CHASSIS_MIDDLE_RIGHT,
			CHASSIS_FRONT_RIGHT,
			CHASSIS_BACK_RIGHT,
			ARM_PIVOT_MOTOR1,
			ARM_PIVOT_MOTOR2
			ARM_EXTENSION_MOTOR,
			WRIST_MOTOR,
			INTAKE_MOTOR,
			INTAKE_MOTOR2,
			MAX_MOTOR_USAGES
		};

		
    ====================================================
    motor sensor types
    ====================================================
    	enum TALON_SENSOR_TYPE
		{
			NO_SENSOR = -1,
			QUAD_ENCODER,
			UNKNOWN_SENSOR,
			ANALOG_POT,
			ANALOG_ENCODER,
			ENCODER_RISING,
			ENCODER_FALLING,
			CTRE_MAG_ENCODER_RELATIVE,
			CTRE_MAG_ENCODER_ABSOLUTE,
			PULSE_WIDTH,
			MAX_SENSOR_TYPES
		};
		
		gearRatio is (Driving Gear Teeth):(Driven Gear Teeth) 
	==================================================== -->
<!ELEMENT motor EMPTY>
<!ATTLIST motor 
          usage             		(  0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 | 
          					          10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 ) "0"
          canId             		(  0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 | 
                              		  10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 
                              		  20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 
                              		  30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 
                              		  40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 
                              		  50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 58 | 59 | 
                              		  60 | 61 | 62 ) "0"
          type              		CDATA ( cantalon | sparkmax_brushless | sparkmax_brushed ) "cantalon"
          inverted          		( true | false ) "false"
          sensorInverted    		( true | false ) "false"
          feedbackDevice    		( -1 | 0  |  2 |  3 |  4 |  5 |  6 |  7 |  8 ) "-1"
          countsPerRev      		CDATA "0"
          gearRatio         		CDATA "1"
          brakeMode         		( true | false ) "false"
          slaveTo 					CDATA "-1"
          peakCurrentDuration 		CDATA #IMPLIED
          continuousCurrentLimit 	CDATA #IMPLIED
          peakCurrentLimit			CDATA #IMPLIED
          currentLimiting   		( true | false ) "false"          
>


<!-- ====================================================
	 analogInput type options 
	 ====================================================
	 enum ANALOG_SENSOR_TYPE
	 {
	 	UNKNOWN_ANALOG_TYPE = -1,
	 	ANALOG_GENERAL,
	 	ANALOG_GYRO,
	 	POTENTIOMETER,
	 	PRESSURE_GAUGE,
	 	MAX_ANALOG_TYPES
	 };
	 ==================================================== -->
<!ELEMENT analogInput EMPTY>
<!ATTLIST analogInput 
          type              (  0 |  1 |  2 | 3 ) "0"
          analogId          (  0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 ) "0"
          voltageMin        CDATA "0.0"
          voltageMax        CDATA "5.0"
          outputMin         CDATA #REQUIRED
          outputMax         CDATA #REQUIRED
>

<!-- ====================================================
	 digitalInput 
	 ====================================================
	        enum DIGITAL_INPUT_TYPE
                {
                UNKNOWN_DIGITAL_INPUT_TYPE = -1,
                CARGO_PRESENT,
                HATCH_PRESENT_SIDE1,
                HATCH_PRESENT_SIDE2,
                ARM_MIN_POSITION,
                ARM_MAX_POSITION,
		            FRONT_LEFT_LINE_DETECT,
		            FRONT_RIGHT_LINE_DETECT,
		            BACK_LEFT_LINE_DETECT,
		            BACK_RIGHT_LINE_DETECT,
                MAX_DIGITAL_INPPUT_TYPES
                };		


	 ==================================================== -->
<!ELEMENT digitalInput EMPTY>
<!ATTLIST digitalInput 
          usage             (  0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 | 8 ) "0"
          digitalId         (  0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 | 
                              10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 
                              20 | 21 | 22 | 23 | 24 | 25 ) "0"
          reversed          (true | false ) "false"
>


<!-- ====================================================
	 servo usage options 
	 ====================================================
 		enum SERVO_USAGE
		{
			UNKNOWN_SERVO_USAGE = -1,
			LIMELIGHT_ANGLE,
			MAX_SERVO_USAGES
		};

 	 ==================================================== -->
<!ELEMENT servo EMPTY>
<!ATTLIST servo 
          usage             (  0 |  1 | 2 ) "0"
          pwmId             (  0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 | 
                              10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 ) "0"
          minAngle			CDATA "0.0"
          maxAngle          CDATA "180.0"
>

<!-- ====================================================
	 TalonTach usage 
	 ====================================================
	 enum TALON_TACH_USAGE
	 {
	 	MIN_WRIST_ANGLE,
        MAX_WRIST_ANGLE,
        TOP_HATCH_PRESENT,
        BOTTOM_HATCH_PRESENT,
        ARM_BOTTOM,
        ARM_TOP
	 };
	 ==================================================== -->
<!ELEMENT talontach EMPTY>
<!ATTLIST talontach 
          usage             (  0 |  1 |  2 |  3 |  4 |  5 |  6 ) "0" 
          canId             (  0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 | 
                              10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 
                              20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 
                              30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 
                              40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 
                              50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 58 | 59 | 
                              60 | 61 | 62 ) "0"
          generalpin             (  0 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 | 
                              10 | 11 )"0"

          
>

